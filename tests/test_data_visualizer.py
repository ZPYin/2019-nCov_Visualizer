import sys
import os
import unittest

projectDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(os.path.join(projectDir, 'src'))

from data_visualizer import searchCityLongName, searchCountryENName


class Test(unittest.TestCase):

    @classmethod
    def setUpClass(self):
        print('Start to test data_visualizer.py...')

    @classmethod
    def tearDownClass(self):
        print('Finish testing data_visualizer.py!')

    def setUp(self):
        print("execute setUp")

    def tearDown(self):
        print("execute tearDown")

    def test_searchCityLongName(self):
        print('---> Test on searchCityLongName')

        longName1 = searchCityLongName('恩施州')
        longName2 = searchCityLongName('恩施')

        self.assertEqual(longName1, '恩施土家族苗族自治州')
        self.assertEqual(longName2, '恩施土家族苗族自治州')

    def test_searchCountryENName(self):
        print('---> Test on searchCountryENName')

        CN_names = ['中国', '美国']
        EN_names = ['China', 'United States of America']

        for CN_name, EN_name in zip(CN_names, EN_names):
            self.assertEqual(searchCountryENName(CN_name), EN_name)


def main():

    suite = unittest.TestSuite()

    tests = [
        Test('test_searchCityLongName')
        ]   # setup the test list
    suite.addTests(tests)

    # print the test report as html file
    # with open('HTMLReport.html', 'w') as f:
    #     runner = HTMLTestRunner(stream=f,
    #                             title='MathFunc Test Report',
    #                             description='generated by HTMLTestRunner.',
    #                             verbosity=2
    #                             )
    #     runner.run(suite)

    # print the test report to the console
    runner = unittest.TextTestRunner(verbosity=2)
    runner.run(suite)


if __name__ == '__main__':
    main()
